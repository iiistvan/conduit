{"name": "test_CON_TC05_NewPost", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'tesztalany1' == 'testuser2'\n  - testuser2\n  + tesztalany1", "trace": "def test_CON_TC05_NewPost():\n        options = webdriver.ChromeOptions()\n        options.add_argument('--headless')\n        driver = webdriver.Chrome(ChromeDriverManager().install(), options=options)\n        driver.get(\"http://localhost:1667\")\n    \n        # Step0: Előfeltétel\n        testdata = [['testuser2', 'testuser2@example.com', 'Abcd123$'], ['testuser1', 'testuser1@example.com', 'Abcd123$'], ['tesztalany1', 'tesztalany1@ta.hu', 'Conduit003']]\n        new_article = ['CikkCim', 'Tema', 'Tag']\n        new_art_szoveg = ['Ez egy új bejegyzés a vizsgamunkába.']\n    \n        signin_head = driver.find_element_by_xpath('//a[@href=\"#/login\"]')\n        signin_head.click()\n        input_items = driver.find_elements_by_xpath('//form//input')\n        signin_btn = driver.find_element_by_xpath('//form/button')\n        for e, i in enumerate(input_items):\n            i.send_keys(testdata[0][e + 1])\n            time.sleep(1)\n        signin_btn.click()\n        time.sleep(2)\n    \n        # Step4: elérhető a New Article felirat\n        newArt_head = driver.find_element_by_xpath('//*[@id=\"app\"]//li[2]/a')\n        assert newArt_head.text in ' New Article'\n    \n        # Step5: elérhető a New Article felirat\n        newArt_head.click()\n        time.sleep(2)\n        ph_i = [\"Article Title\", \"What's this article about?\", \"Enter tags\"]\n        ph_t = [\"Write your article (in markdown)\"]\n        input_items = driver.find_elements_by_xpath('//form//input')\n        # print(len(ph_i), len(input_items))\n        for e, i in enumerate(input_items):\n            assert i.get_attribute('placeholder') == ph_i[e]\n            # print(f\"A(z) {ph_i[e]} beviteli mező megjelenik.\")\n        assert driver.find_element_by_xpath('//form//textarea').get_attribute('placeholder') == ph_t[0]\n        # print(f\"A(z) {ph_t[0]} beviteli mező megjelenik.\")\n    \n        # Step6: Cikk feltöltése adatokkal\n        publish_btn = driver.find_element_by_xpath('//form/button')\n        for e, i in enumerate(input_items):\n            i.send_keys(new_article[e])\n            time.sleep(1)\n        driver.find_element_by_xpath('//form//textarea').send_keys(new_art_szoveg)\n        publish_btn.click()\n        time.sleep(2)\n    \n        # Step7: a felületen a title, a szerző, tag,  Edit és Delete gomb, valamint egy üres comment ablak és Post Comment gomb\n        assert driver.find_element_by_xpath('//div[@class=\"banner\"]//h1').text == new_article[0]\n>       assert driver.find_element_by_xpath('//div[@class=\"info\"]/a').text == testdata[0][0]\nE       AssertionError: assert 'tesztalany1' == 'testuser2'\nE         - testuser2\nE         + tesztalany1\n\ntest_CON_TC05_NewPost.py:57: AssertionError"}, "attachments": [{"name": "log", "source": "a92d5317-75ce-4346-8710-6f884b7c0afc-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "d4245185-c5b4-41b6-94da-812e2c4102ef-attachment.txt", "type": "text/plain"}], "start": 1627136003599, "stop": 1627136017468, "uuid": "e0959868-1e03-4aeb-9dee-f3307b241773", "historyId": "4fb6ba57b0d0c17cc46ebdc6108dfc09", "testCaseId": "39190be7f60dee5a7805d41141bf6401", "fullName": "test_CON_TC05_NewPost#test_CON_TC05_NewPost", "labels": [{"name": "suite", "value": "test_CON_TC05_NewPost"}, {"name": "host", "value": "T10-MOLIST"}, {"name": "thread", "value": "12312-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_CON_TC05_NewPost"}]}