{"name": "test_CON_TC01_Reg", "status": "failed", "statusDetails": {"message": "AssertionError: assert '' == 'Your registr...s successful!'\n  - Your registration was successful!", "trace": "def test_CON_TC01_Reg():\n        options = webdriver.ChromeOptions()\n        options.add_argument('--headless')\n        driver = webdriver.Chrome(ChromeDriverManager().install(), options=options)\n        driver.get(\"http://localhost:1667\")\n    \n        time.sleep(2)\n    \n        # véletlen string generálás\n        def get_random_string(length):\n            # choose from all lowercase letter\n            letters = string.ascii_lowercase\n            result_str = ''.join(random.choice(letters) for i in range(length))\n            return result_str\n    \n        # testdata = [['tesztalany1', 'tesztalany1@ta.hu', 'Conduit003'], ['tesztalany12', 'tesztalany12@ta.hu', 'Conduit003'],\n        #             ['t360iiistvan1', 't360iiistvan1@gmail.com', 'Conduit003']]\n        uname = get_random_string(8)\n        testdata = [uname, (uname + '@example.com'), 'Conduit003']\n        signup_head = driver.find_element_by_xpath('//*[@id=\"app\"]//li[3]/a')\n    \n        # try:\n        # Step1: Homepage megjelenik\n        assert driver.find_element_by_tag_name('h1').text == 'conduit'\n        assert driver.find_element_by_xpath('//*[@class=\"banner\"]//p').get_attribute(\n            'innerHTML') == 'A place to share your knowledge.'\n        # print('A vizsgált oldal megjelent.')\n    \n        # Step2: elérhető a Sigp Up felirat\n        assert driver.find_element_by_xpath('//*[@id=\"app\"]//li[3]').text == 'Sign up'\n        # print('Elérhető a Sign Up felirat.')\n    \n        # Step3: megjelenik a regisztrációs felület\n        signup_head.click()\n        assert driver.find_element_by_tag_name('h1').text == 'Sign up'\n        # print('A regisztrációs felület megjelenik.')\n    \n        # Step4: látható a username, email, password mező\n        ph = ['Username', 'Email', 'Password']\n        input_items = driver.find_elements_by_xpath('//form//input')\n        for e, i in enumerate(input_items):\n            assert i.get_attribute('placeholder') == ph[e]\n            print(f\"A(z) {ph[e]} beviteli mező megjelenik.\")\n    \n        # Step5: a tesztadat a regisztráció megtörténik\n        signup_btn = driver.find_element_by_xpath('//form/button')\n        text_uj = 'Your registration was successful!'\n        for e, i in enumerate(input_items):\n            i.send_keys(testdata[e])\n            time.sleep(1)\n        signup_btn.click()\n        time.sleep(1)\n>       assert driver.find_element_by_xpath('//div[@class=\"swal-text\"]').text == text_uj\nE       AssertionError: assert '' == 'Your registr...s successful!'\nE         - Your registration was successful!\n\ntest_CON_TC01_Reg.py:61: AssertionError"}, "attachments": [{"name": "log", "source": "2c9c12b8-2173-45f3-baa2-ede1c5c7108e-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "764f2294-849a-4757-8aad-e0524d1a1baf-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "4ff977da-c7dd-4dc2-a795-e5dd51886ceb-attachment.txt", "type": "text/plain"}], "start": 1627135973928, "stop": 1627135984747, "uuid": "d1fd8cfe-1ef3-46bf-b584-7965845863cf", "historyId": "3e560f80b2b409162af4231059691e07", "testCaseId": "109176b2665483d73acf8c84d3125079", "fullName": "test_CON_TC01_Reg#test_CON_TC01_Reg", "labels": [{"name": "suite", "value": "test_CON_TC01_Reg"}, {"name": "host", "value": "T10-MOLIST"}, {"name": "thread", "value": "12312-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_CON_TC01_Reg"}]}